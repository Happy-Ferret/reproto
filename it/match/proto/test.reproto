package test;

type Data {
  name: string;
}

tuple Point {
  match {
    42 => Point(timestamp: 42, value: 41.2);
    n: unsigned => Point(timestamp: n, value: 42.0);
    p: Point => p;
  }

  timestamp: unsigned/64 as "TS";
  value: double;
}

interface Interface {
  match {
    name: string => Interface.One(name: name, data: Data(name: "data"));
  }

  name: string;

  One {
    name "one";
    data: Data;
  }

  Two {
    name "two";
    data: Data;
  }
}

type Type {
  match {
    data: string => Type(data: data);
    "foo" => Type(data: "foo");
  }

  data: string;
}
